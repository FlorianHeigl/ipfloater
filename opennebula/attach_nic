#!/bin/bash
# How this works:
#   copy this piece of code just after getting the parameters for the attach_nic script in /var/lib/one/remotes/vmm/kvm (or your vmm driver)
#
# This code contacts ipfloater via the REST API, to try to guess whether the MAC address is a floating IP or not. If it is, gets the main
# IP of the VM (using the ONE commandline), and contacts ipfloater to redirect the IP address to the private one.
#
# If all the interaction is made via the ONE interfaces, ONE will keep track of the IP leases and the floating IPs will be correctly managed
# independing of the case that they are assigned to the VM via direct IP lease (at the creation of the VM) or as a floating IP (via NIC attachment)
#
# CONFIGURATION:
#   - this code assumes that the oneadmin can ssh the ONE frontend without using password
#   - configure the IPFLOATER_HOST_REST, IPFLOATER_PORT_REST and ONE_FRONTEND variables to your specific configuration

#-------- code snip to attach floating IPs --------------------------
IPFLOATER_HOST_REST=niebla01
IPFLOATER_PORT_REST=7003
ONE_FRONTEND=onecloud
#-------- end of configuration --------------------------------------
IPFLOATER_REST_SERVER=$IPFLOATER_HOST_REST:$IPFLOATER_PORT_REST
VMID=${DOMAIN:4}
FLOATING_IP=$(curl -fXGET http://$IPFLOATER_REST_SERVER/arp/$MAC)
if [ $? -eq 0 ] && [ "$FLOATING_IP" != "" ]; then
        IP=$(ssh $ONE_FRONTEND "onevm show $VMID -x | /var/lib/one/remotes/datastore/xpath.rb /VM/TEMPLATE/NIC[NIC_ID=0]/IP | head -n 1")
        if [ "$IP" != "" ]; then
                RESULT=$(curl -fXPUT http://$IPFLOATER_REST_SERVER/public/$FLOATING_IP/redirect/$IP)
                if [ $? -ne 0 ]; then
                        log_error "could not attach floating IP $FLOATING_IP to $IP ($RESULT)"
                        exit 1
                fi
                log_info "IP $FLOATING_IP successfully attached to ip $IP"
                exit 0
        else
                log_error "requesting a floating IP but could not get the main IP of vm $DOMAIN"
                exit 1
        fi
fi
# -------------------------------------------------------------------
